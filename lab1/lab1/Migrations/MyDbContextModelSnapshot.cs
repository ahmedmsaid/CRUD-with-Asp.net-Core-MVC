// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using lab1.Models;

#nullable disable

namespace lab1.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("lab1.Models.Department", b =>
                {
                    b.Property<int>("Dnum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Dnum"), 1L, 1);

                    b.Property<string>("Dname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Dnum");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("lab1.Models.Employee", b =>
                {
                    b.Property<int>("SSN")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SSN"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentsDnum")
                        .HasColumnType("int");

                    b.Property<int?>("Dnum")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Salary")
                        .HasColumnType("real");

                    b.HasKey("SSN");

                    b.HasIndex("DepartmentsDnum");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("lab1.Models.Project", b =>
                {
                    b.Property<int>("Pnumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Pnumber"), 1L, 1);

                    b.Property<int>("DepartmentDnum")
                        .HasColumnType("int");

                    b.Property<int>("Dnum")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Pnumber");

                    b.HasIndex("DepartmentDnum");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("lab1.Models.WorkFor", b =>
                {
                    b.Property<int>("ESSN")
                        .HasColumnType("int");

                    b.Property<int>("Pno")
                        .HasColumnType("int");

                    b.Property<int?>("EmpSSN")
                        .HasColumnType("int");

                    b.Property<int>("Hours")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectsPnumber")
                        .HasColumnType("int");

                    b.HasKey("ESSN", "Pno");

                    b.HasIndex("EmpSSN");

                    b.HasIndex("ProjectsPnumber");

                    b.ToTable("WorksFor");
                });

            modelBuilder.Entity("lab1.Models.Employee", b =>
                {
                    b.HasOne("lab1.Models.Department", "Departments")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentsDnum")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departments");
                });

            modelBuilder.Entity("lab1.Models.Project", b =>
                {
                    b.HasOne("lab1.Models.Department", "Department")
                        .WithMany("Projects")
                        .HasForeignKey("DepartmentDnum")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("lab1.Models.WorkFor", b =>
                {
                    b.HasOne("lab1.Models.Employee", "Emp")
                        .WithMany("WorksOn")
                        .HasForeignKey("EmpSSN");

                    b.HasOne("lab1.Models.Project", "Projects")
                        .WithMany("WorkedOn")
                        .HasForeignKey("ProjectsPnumber");

                    b.Navigation("Emp");

                    b.Navigation("Projects");
                });

            modelBuilder.Entity("lab1.Models.Department", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("Projects");
                });

            modelBuilder.Entity("lab1.Models.Employee", b =>
                {
                    b.Navigation("WorksOn");
                });

            modelBuilder.Entity("lab1.Models.Project", b =>
                {
                    b.Navigation("WorkedOn");
                });
#pragma warning restore 612, 618
        }
    }
}
